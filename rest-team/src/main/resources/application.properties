## HTTP configuration
server.port=8081
server.servlet.context-path=/rest-team

## Database configuration
spring.datasource.url=jdbc:postgresql://${DS_HOST:127.0.0.1}:${DS_PORT:5432}/${DS_DB_NAME:teams_database}
spring.datasource.username=${DS_LOGIN:team}
spring.datasource.password=${DS_PASSWORD:team}
spring.datasource.hikari.minimum-idle=${MIN_DB_POOL_SIZE:1}
spring.datasource.hikari.maximum-pool-size=${MAX_DB_POOL_SIZE:16}

## Hibernate configuration
#With this setup, Spring Boot application will first apply missing Flyway scripts to the database and then check if the
#JPA and database model match during startup.
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
## Logging configuration
logging.level.root=INFO
logging.group.application=springboot.soccer.game.team
logging.level.application=DEBUG

## Health configuration
management.endpoints.web.exposure.include=health,info,env,configprops
management.endpoint.env.show-values=always
management.endpoint.configprops.show-values=always
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.endpoint.health.group.readiness.include=readinessState,keycloak,db


## Application information
info.app.encoding=@project.build.sourceEncoding@
info.app.java.source=@language.compiler.level@
info.app.java.target=@language.compiler.level@

## Keycloak configuration
keycloak.auth-server-url=http://${KC_HOST:127.0.0.1}:${KC_PORT:8080}/auth
keycloak.resource=team-client
jwt.auth.converter.principle-attribute=preferred_username
keycloak.security.role=team

spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.auth-server-url}/realms/team-realm

## Swagger configuration
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.show-actuator=true
springdoc.swagger-ui.oauth.client-id=${keycloak.resource}
springdoc.swagger-ui.oauth.client-secret=6fe5572d-d0f7-4121-8fc4-d2768bf82836

## Docker-Compose configuration
spring.docker.compose.file=../infrastructure/docker-compose-linux.yaml
spring.docker.compose.start.command=up
spring.docker.compose.stop.command=down
spring.docker.compose.stop.timeout=1m

## Virtual Thread Configuration
spring.threads.virtual.enabled=false
