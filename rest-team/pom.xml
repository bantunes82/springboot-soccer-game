<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>springboot.soccer.game</groupId>
        <artifactId>super-parent-root</artifactId>
        <version>1.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <groupId>springboot.soccer.game</groupId>
    <artifactId>rest-team</artifactId>
    <version>1.0</version>
    <name>rest-team</name>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        </dependency>
        <!--Documentation to configure Automatic Restart in IntelliJ:
https://www.jetbrains.com/help/idea/spring-boot.html#spring-boot-endpoints-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <optional>true</optional>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <classifier>runtime</classifier>
            <scope>test</scope>
        </dependency>
        <!-- Test Library to verify pinned threads using virtual threads https://github.com/cescoffier/loom-unit-->
        <dependency>
            <groupId>me.escoffier.loom</groupId>
            <artifactId>loom-unit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>observability</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-dependency</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/agent</outputDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>io.opentelemetry.javaagent</groupId>
                                            <artifactId>opentelemetry-javaagent</artifactId>
                                            <version>${opentelemetry-agent.version}</version>
                                            <type>jar</type>
                                            <destFileName>optel-agent.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build-info</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <profiles>
                                <profile>observability</profile>
                            </profiles>

                            <!-- configuration to run the application locally-->
                            <environmentVariables>
                                <OTEL_SERVICE_NAME>${name}</OTEL_SERVICE_NAME>
                                <OTEL_RESOURCE_ATTRIBUTES>service=${name},env=dev</OTEL_RESOURCE_ATTRIBUTES>
                                <OTEL_METRICS_EXPORTER>otlp</OTEL_METRICS_EXPORTER>
                                <OTEL_EXPORTER_OTLP_METRICS_ENDPOINT>http://localhost:4317</OTEL_EXPORTER_OTLP_METRICS_ENDPOINT>
                                <OTEL_EXPORTER_OTLP_METRICS_PROTOCOL>grpc</OTEL_EXPORTER_OTLP_METRICS_PROTOCOL>
                                <OTEL_TRACES_EXPORTER>otlp</OTEL_TRACES_EXPORTER>
                                <OTEL_EXPORTER_OTLP_TRACES_ENDPOINT>http://localhost:4317</OTEL_EXPORTER_OTLP_TRACES_ENDPOINT>
                                <OTEL_EXPORTER_OTLP_TRACES_PROTOCOL>grpc</OTEL_EXPORTER_OTLP_TRACES_PROTOCOL>
                                <OTEL_LOGS_EXPORTER>otlp</OTEL_LOGS_EXPORTER>
                                <OTEL_EXPORTER_OTLP_LOGS_ENDPOINT>http://localhost:4317</OTEL_EXPORTER_OTLP_LOGS_ENDPOINT>
                                <OTEL_EXPORTER_OTLP_LOGS_PROTOCOL>grpc</OTEL_EXPORTER_OTLP_LOGS_PROTOCOL>
                            </environmentVariables>
                            <jvmArguments>
                                -javaagent:${project.build.directory}/agent/optel-agent.jar
                            </jvmArguments>

                            <!-- configuration to run the application via container image-->
                            <image>
                                <buildpacks>
                                    <buildpack>urn:cnb:builder:paketo-buildpacks/java</buildpack>
                                    <buildpack>gcr.io/paketo-buildpacks/opentelemetry</buildpack>
                                </buildpacks>
                                <env>
                                    <BP_OPENTELEMETRY_ENABLED>true</BP_OPENTELEMETRY_ENABLED>
                                </env>
                            </image>
                            <excludes>
                                <exclude>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                </exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
